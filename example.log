DEBUG main org.jboss.logging - Logging Provider: org.jboss.logging.Log4jLoggerProvider
DEBUG main org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl - Incoming config yielded no classloaders; adding standard SE ones
DEBUG main org.hibernate.jpa.HibernatePersistenceProvider - Located and parsed 1 persistence units; checking each
DEBUG main org.hibernate.jpa.HibernatePersistenceProvider - Checking persistence-unit [name=ContabilitatePU, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [ContabilitatePU]
DEBUG main org.hibernate.jpa.boot.spi.ProviderChecker - Persistence-unit [ContabilitatePU] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
DEBUG main org.hibernate.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: ContabilitatePU
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/SIIROM_0099.LTC-0099/workspace/Licenta/bin/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names [
		model.User]
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: root
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/contabilitatedb
		hibernate.dialect: org.hibernate.dialect.MySQLDialect
		hibernate.show_sql: false
		hibernate.format_sql: false
		hibernate.hbm2ddl.auto: create
		javax.persistence.jdbc.user: root]
DEBUG main org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
DEBUG main org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
DEBUG main org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
DEBUG main org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
DEBUG main org.hibernate.boot.registry.selector.internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5] -> [org.hibernate.dialect.MySQL5Dialect] (replacing [org.hibernate.dialect.MySQL5Dialect])
DEBUG main org.hibernate.boot.registry.selector.internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5InnoDB] -> [org.hibernate.dialect.MySQL5InnoDBDialect] (replacing [org.hibernate.dialect.MySQL5InnoDBDialect])
INFO main org.hibernate.Version - HHH000412: Hibernate Core {4.3.11.Final}
INFO main org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
INFO main org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist
DEBUG main org.hibernate.service.spi.ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@75881071
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@75881071
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@75881071
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3891771e
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@365185bd
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@42607a4f
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2e3fc542
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2e3fc542
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2e3fc542
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@704d6e83
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@704d6e83
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@704d6e83
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@67b467e9
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@67b467e9
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@67b467e9
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@149494d8
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@149494d8
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@149494d8
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@77846d2c
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@77846d2c
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@77846d2c
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@319b92f3
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@319b92f3
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@319b92f3
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@376b4233
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@376b4233
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@376b4233
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6dde5c8c
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6dde5c8c
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@281e3708
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@281e3708
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@4516af24
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@4516af24
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@16022d9d
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5a4041cc
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@7ba18f1b
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7ba18f1b
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@73d4cc9e
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@73d4cc9e
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@6366ebe0
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6366ebe0
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@5f71c76a
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5f71c76a
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5f71c76a
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1e4a7dd4
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@1ad282e0
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1ad282e0
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1ad282e0
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5e955596
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@dbd940d
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@dbd940d
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@2bea5ab4
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2bea5ab4
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3bd94634
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3bd94634
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@1188e820
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1188e820
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@46238e3f
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@46238e3f
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4e4aea35
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@517cd4b
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@45afc369
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@45afc369
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@45afc369
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@69a10787
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@69a10787
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@69a10787
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@4e41089d
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@4148db48
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@4148db48
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@4148db48
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4df828d7
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4df828d7
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4df828d7
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@31206beb
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@120d6fe6
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@64d7f7e0
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@64d7f7e0
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6385cb26
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@5d20e46
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5d20e46
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@351d0846
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@351d0846
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7fe8ea47
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@255b53dc
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@3b2c72c2
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@29ba4338
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@29ba4338
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@c540f5a
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@770c2e6b
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1a052a00
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4d826d77
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@61009542
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@77e9807f
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@448ff1a8
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1a38c59b
INFO main org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {4.0.5.Final}
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
DEBUG main org.hibernate.cfg.Configuration - Preparing to build session factory with filters : {}
WARN main org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl - HHH000402: Using Hibernate built-in connection pool (not for production use!)
INFO main org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl - HHH000401: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/contabilitatedb]
INFO main org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl - HHH000046: Connection properties: {user=root, password=root}
INFO main org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl - HHH000006: Autocommit mode: false
INFO main org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl - HHH000115: Hibernate connection pool size: 20 (min=1)
DEBUG main org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl - Initializing Connection pool with 1 Connections
DEBUG main org.hibernate.engine.jdbc.internal.JdbcServicesImpl - Database ->
       name : MySQL
    version : 5.6.26-log
      major : 5
      minor : 6
DEBUG main org.hibernate.engine.jdbc.internal.JdbcServicesImpl - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.35 ( Revision: 5fb9c5849535c13917c2cf9baaece6ef9693ef27 )
      major : 5
      minor : 1
DEBUG main org.hibernate.engine.jdbc.internal.JdbcServicesImpl - JDBC version : 4.0
DEBUG main org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
INFO main org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
DEBUG main org.hibernate.cfg.Configuration - Processing hbm.xml files
DEBUG main org.hibernate.cfg.Configuration - Process annotated classes
DEBUG main org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: model.User
DEBUG main org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG main org.hibernate.cfg.AnnotationBinder - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
DEBUG main org.hibernate.cfg.annotations.EntityBinder - Import with entity name User
DEBUG main org.hibernate.cfg.annotations.EntityBinder - Bind entity model.User on table User
DEBUG main org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG main org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
DEBUG main org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.User:id]
DEBUG main org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
DEBUG main org.hibernate.cfg.annotations.PropertyBinder - Building property id
DEBUG main org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=password, insertable=true, updatable=true, unique=false}
DEBUG main org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property password with lazy=false
DEBUG main org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.User:password]
DEBUG main org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for password
DEBUG main org.hibernate.cfg.annotations.PropertyBinder - Building property password
DEBUG main org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=type, insertable=true, updatable=true, unique=false}
DEBUG main org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property type with lazy=false
DEBUG main org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.User:type]
DEBUG main org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for type
DEBUG main org.hibernate.cfg.annotations.PropertyBinder - Building property type
DEBUG main org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=username, insertable=true, updatable=true, unique=false}
DEBUG main org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property username with lazy=false
DEBUG main org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.User:username]
DEBUG main org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for username
DEBUG main org.hibernate.cfg.annotations.PropertyBinder - Building property username
DEBUG main org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
DEBUG main org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for password
DEBUG main org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for type
DEBUG main org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for username
DEBUG main org.hibernate.cfg.Configuration - Processing fk mappings (*ToOne and JoinedSubclass)
DEBUG main org.hibernate.cfg.Configuration - Processing extends queue
DEBUG main org.hibernate.cfg.Configuration - Processing extends queue
DEBUG main org.hibernate.cfg.Configuration - Processing collection mappings
DEBUG main org.hibernate.cfg.Configuration - Processing native query and ResultSetMapping mappings
DEBUG main org.hibernate.cfg.Configuration - Processing association property references
DEBUG main org.hibernate.cfg.Configuration - Creating tables' unique integer identifiers
DEBUG main org.hibernate.cfg.Configuration - Processing foreign key constraints
DEBUG main org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
DEBUG main org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
DEBUG main org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
DEBUG main org.hibernate.cfg.SettingsFactory - Automatic flush during beforeCompletion(): disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Automatic session close at end of transaction: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - JDBC batch size: 15
DEBUG main org.hibernate.cfg.SettingsFactory - JDBC batch updates for versioned data: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Scrollable result sets: enabled
DEBUG main org.hibernate.cfg.SettingsFactory - Wrap result sets: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - JDBC3 getGeneratedKeys(): enabled
DEBUG main org.hibernate.cfg.SettingsFactory - multi-tenancy strategy : NONE
DEBUG main org.hibernate.cfg.SettingsFactory - Connection release mode: auto
DEBUG main org.hibernate.cfg.SettingsFactory - Using BatchFetchStyle : LEGACY
DEBUG main org.hibernate.cfg.SettingsFactory - Maximum outer join fetch depth: 2
DEBUG main org.hibernate.cfg.SettingsFactory - Default batch fetch size: 1
DEBUG main org.hibernate.cfg.SettingsFactory - Generate SQL with comments: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Order SQL updates by primary key: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Order SQL inserts for batching: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Default null ordering: none
DEBUG main org.hibernate.cfg.SettingsFactory - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
INFO main org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory - HHH000397: Using ASTQueryTranslatorFactory
DEBUG main org.hibernate.cfg.SettingsFactory - Query language substitutions: {}
DEBUG main org.hibernate.cfg.SettingsFactory - JPA-QL strict compliance: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Second-level cache: enabled
DEBUG main org.hibernate.cfg.SettingsFactory - Query cache: disabled
DEBUG main org.hibernate.cache.internal.RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
DEBUG main org.hibernate.cfg.SettingsFactory - Optimize cache for minimal puts: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Structured second-level cache entries: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Second-level cache direct-reference entries: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Automatic eviction of collection cache: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Statistics: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Deleted entity synthetic identifier rollback: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Default entity-mode: pojo
DEBUG main org.hibernate.cfg.SettingsFactory - Named query checking : enabled
DEBUG main org.hibernate.cfg.SettingsFactory - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
DEBUG main org.hibernate.cfg.SettingsFactory - Allow initialization of lazy state outside session : : disabled
DEBUG main org.hibernate.cfg.SettingsFactory - JTA Track by Thread: enabled
DEBUG main org.hibernate.internal.SessionFactoryImpl - Building session factory
DEBUG main org.hibernate.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {}
DEBUG main org.hibernate.internal.SessionFactoryImpl - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files\Java\jre1.8.0_71\bin, java.vm.version=25.71-b15, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\SIIROM_0099.LTC-0099\workspace\Licenta, java.runtime.version=1.8.0_71-b15, javax.persistence.jdbc.user=root, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.endorsed.dirs=C:\Program Files\Java\jre1.8.0_71\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\SIIROM~1.LTC\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, javax.persistence.jdbc.password=root, user.variant=, os.name=Windows 8.1, sun.jnu.encoding=Cp1252, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/contabilitatedb, java.library.path=C:\Program Files\Java\jre1.8.0_71\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_71/bin/server;C:/Program Files/Java/jre1.8.0_71/bin;C:/Program Files/Java/jre1.8.0_71/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Broadcom\Broadcom 802.11 Network Adapter;;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\TortoiseSVN\bin;C:\Program Files (x86)\Skype\Phone\;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Broadcom\Broadcom 802.11 Network Adapter;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\TortoiseSVN\bin;C:\Program Files (x86)\Skype\Phone\;E:\eclipse;;., javax.persistence.jdbc.driver=com.mysql.jdbc.Driver, hibernate.ejb.persistenceUnitName=ContabilitatePU, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=6.3, user.home=C:\Users\SIIROM_0099.LTC-0099, user.timezone=, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=Cp1252, hibernate.format_sql=false, user.name=SIIROM_0099, java.class.path=C:\Users\SIIROM_0099.LTC-0099\workspace\Licenta\bin;E:\eclipse\plugins\org.eclipse.fx.ide.css.jfx8_2.3.0.201603020810.jar;C:\Users\SIIROM_0099.LTC-0099\workspace\Licenta\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\SIIROM_0099.LTC-0099\workspace\Licenta\hibernate-core-4.3.11.Final.jar;C:\Users\SIIROM_0099.LTC-0099\workspace\Licenta\hibernate-entitymanager-4.3.11.Final.jar;C:\Users\SIIROM_0099.LTC-0099\workspace\Licenta\mysql-connector-java-5.1.35.jar;C:\Users\SIIROM_0099.LTC-0099\workspace\Licenta\hibernate-commons-annotations-4.0.5.Final.jar;C:\Users\SIIROM_0099.LTC-0099\workspace\Licenta\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;C:\Users\SIIROM_0099.LTC-0099\workspace\Licenta\jboss-logging-3.1.3.GA.jar;C:\Users\SIIROM_0099.LTC-0099\workspace\Licenta\log4j-1.2.17.jar;C:\Users\SIIROM_0099.LTC-0099\workspace\Licenta\jboss-logging-annotations-1.2.0.Beta1.jar;C:\Users\SIIROM_0099.LTC-0099\workspace\Licenta\antlr-2.7.7.jar;C:\Users\SIIROM_0099.LTC-0099\workspace\Licenta\dom4j-1.6.1.jar;C:\Users\SIIROM_0099.LTC-0099\workspace\Licenta\jandex-1.1.0.Final.jar;C:\Users\SIIROM_0099.LTC-0099\workspace\Licenta\javassist-3.18.1-GA.jar;C:\Users\SIIROM_0099.LTC-0099\workspace\Licenta\javax.servlet-3.0.0.v201112011016.jar;C:\Users\SIIROM_0099.LTC-0099\workspace\Licenta\src\META-INF, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=false, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=C:\Program Files\Java\jre1.8.0_71, sun.java.command=utils.Main, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.specification.vendor=Oracle Corporation, user.language=en, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_71, java.ext.dirs=C:\Program Files\Java\jre1.8.0_71\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jre1.8.0_71\lib\resources.jar;C:\Program Files\Java\jre1.8.0_71\lib\rt.jar;C:\Program Files\Java\jre1.8.0_71\lib\sunrsasign.jar;C:\Program Files\Java\jre1.8.0_71\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_71\lib\jce.jar;C:\Program Files\Java\jre1.8.0_71\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_71\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_71\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=create, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}
DEBUG main org.hibernate.secure.spi.JaccIntegrator - Skipping JACC integration as it was not enabled
DEBUG main org.hibernate.engine.spi.CascadeStyles - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: model.User
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select id from User where id =?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select user_.id, user_.password as password2_0_, user_.type as type3_0_, user_.username as username4_0_ from User user_ where user_.id=?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into User (password, type, username, id) values (?, ?, ?, ?)
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update User set password=?, type=?, username=? where id=?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from User where id=?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into User (password, type, username) values (?, ?, ?)
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48c76607]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : password
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : type
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : username
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=model.User)
    - Returns
       - EntityReturnImpl(entity=model.User, querySpaceUid=<gen:0>, path=model.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity model.User [NONE]: select user0_.id as id1_0_0_, user0_.password as password2_0_0_, user0_.type as type3_0_0_, user0_.username as username4_0_0_ from User user0_ where user0_.id=?
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55cf0d14]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : password
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : type
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : username
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=model.User)
    - Returns
       - EntityReturnImpl(entity=model.User, querySpaceUid=<gen:0>, path=model.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity model.User [READ]: select user0_.id as id1_0_0_, user0_.password as password2_0_0_, user0_.type as type3_0_0_, user0_.username as username4_0_0_ from User user0_ where user0_.id=?
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27adc16e]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : password
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : type
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : username
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=model.User)
    - Returns
       - EntityReturnImpl(entity=model.User, querySpaceUid=<gen:0>, path=model.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity model.User [UPGRADE]: select user0_.id as id1_0_0_, user0_.password as password2_0_0_, user0_.type as type3_0_0_, user0_.username as username4_0_0_ from User user0_ where user0_.id=? for update
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2609b277]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : password
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : type
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : username
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=model.User)
    - Returns
       - EntityReturnImpl(entity=model.User, querySpaceUid=<gen:0>, path=model.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity model.User [UPGRADE_NOWAIT]: select user0_.id as id1_0_0_, user0_.password as password2_0_0_, user0_.type as type3_0_0_, user0_.username as username4_0_0_ from User user0_ where user0_.id=? for update
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@563e4951]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : password
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : type
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : username
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=model.User)
    - Returns
       - EntityReturnImpl(entity=model.User, querySpaceUid=<gen:0>, path=model.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity model.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_0_0_, user0_.password as password2_0_0_, user0_.type as type3_0_0_, user0_.username as username4_0_0_ from User user0_ where user0_.id=? for update
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b175c00]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : password
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : type
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : username
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=model.User)
    - Returns
       - EntityReturnImpl(entity=model.User, querySpaceUid=<gen:0>, path=model.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity model.User [FORCE]: select user0_.id as id1_0_0_, user0_.password as password2_0_0_, user0_.type as type3_0_0_, user0_.username as username4_0_0_ from User user0_ where user0_.id=? for update
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ae8bcbc]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : password
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : type
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : username
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=model.User)
    - Returns
       - EntityReturnImpl(entity=model.User, querySpaceUid=<gen:0>, path=model.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity model.User [PESSIMISTIC_READ]: select user0_.id as id1_0_0_, user0_.password as password2_0_0_, user0_.type as type3_0_0_, user0_.username as username4_0_0_ from User user0_ where user0_.id=? lock in share mode
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d3d101b]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : password
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : type
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : username
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=model.User)
    - Returns
       - EntityReturnImpl(entity=model.User, querySpaceUid=<gen:0>, path=model.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity model.User [PESSIMISTIC_WRITE]: select user0_.id as id1_0_0_, user0_.password as password2_0_0_, user0_.type as type3_0_0_, user0_.username as username4_0_0_ from User user0_ where user0_.id=? for update
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5cdec700]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : password
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : type
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : username
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=model.User)
    - Returns
       - EntityReturnImpl(entity=model.User, querySpaceUid=<gen:0>, path=model.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity model.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.password as password2_0_0_, user0_.type as type3_0_0_, user0_.username as username4_0_0_ from User user0_ where user0_.id=? for update
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78aa1f72]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : password
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : type
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : username
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=model.User)
    - Returns
       - EntityReturnImpl(entity=model.User, querySpaceUid=<gen:0>, path=model.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity model.User [OPTIMISTIC]: select user0_.id as id1_0_0_, user0_.password as password2_0_0_, user0_.type as type3_0_0_, user0_.username as username4_0_0_ from User user0_ where user0_.id=?
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35399441]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : password
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : type
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : username
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=model.User)
    - Returns
       - EntityReturnImpl(entity=model.User, querySpaceUid=<gen:0>, path=model.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity model.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_0_0_, user0_.password as password2_0_0_, user0_.type as type3_0_0_, user0_.username as username4_0_0_ from User user0_ where user0_.id=?
DEBUG main org.hibernate.loader.Loader - Static select for action ACTION_MERGE on entity model.User: select user0_.id as id1_0_0_, user0_.password as password2_0_0_, user0_.type as type3_0_0_, user0_.username as username4_0_0_ from User user0_ where user0_.id=?
DEBUG main org.hibernate.loader.Loader - Static select for action ACTION_REFRESH on entity model.User: select user0_.id as id1_0_0_, user0_.password as password2_0_0_, user0_.type as type3_0_0_, user0_.username as username4_0_0_ from User user0_ where user0_.id=?
DEBUG main org.hibernate.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@176b75f7
DEBUG main org.hibernate.internal.SessionFactoryRegistry - Registering SessionFactory: 1b8fddd4-e4e0-4d34-a339-7d019240ab0e (<unnamed>)
DEBUG main org.hibernate.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
DEBUG main org.hibernate.internal.SessionFactoryImpl - Instantiated session factory
DEBUG main org.hibernate.cfg.Configuration - Processing hbm.xml files
DEBUG main org.hibernate.cfg.Configuration - Process annotated classes
DEBUG main org.hibernate.cfg.Configuration - Processing fk mappings (*ToOne and JoinedSubclass)
DEBUG main org.hibernate.cfg.Configuration - Processing extends queue
DEBUG main org.hibernate.cfg.Configuration - Processing extends queue
DEBUG main org.hibernate.cfg.Configuration - Processing collection mappings
DEBUG main org.hibernate.cfg.Configuration - Processing native query and ResultSetMapping mappings
DEBUG main org.hibernate.cfg.Configuration - Processing association property references
DEBUG main org.hibernate.cfg.Configuration - Creating tables' unique integer identifiers
DEBUG main org.hibernate.cfg.Configuration - Processing foreign key constraints
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG main org.hibernate.cfg.Configuration - Processing hbm.xml files
DEBUG main org.hibernate.cfg.Configuration - Process annotated classes
DEBUG main org.hibernate.cfg.Configuration - Processing fk mappings (*ToOne and JoinedSubclass)
DEBUG main org.hibernate.cfg.Configuration - Processing extends queue
DEBUG main org.hibernate.cfg.Configuration - Processing extends queue
DEBUG main org.hibernate.cfg.Configuration - Processing collection mappings
DEBUG main org.hibernate.cfg.Configuration - Processing native query and ResultSetMapping mappings
DEBUG main org.hibernate.cfg.Configuration - Processing association property references
DEBUG main org.hibernate.cfg.Configuration - Creating tables' unique integer identifiers
DEBUG main org.hibernate.cfg.Configuration - Processing foreign key constraints
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQLDialect]
INFO main org.hibernate.tool.hbm2ddl.SchemaExport - HHH000227: Running hbm2ddl schema export
DEBUG main org.hibernate.tool.hbm2ddl.SchemaExport - Import file not found: /import.sql
DEBUG main org.hibernate.SQL - drop table if exists User
DEBUG main org.hibernate.SQL - create table User (id integer not null auto_increment, password varchar(255), type integer not null, username varchar(255), primary key (id))
INFO main org.hibernate.tool.hbm2ddl.SchemaExport - HHH000230: Schema export complete
DEBUG main org.hibernate.internal.NamedQueryRepository - Checking 0 named HQL queries
DEBUG main org.hibernate.internal.NamedQueryRepository - Checking 0 named SQL queries
DEBUG main org.hibernate.stat.internal.StatisticsInitiator - Statistics initialized [enabled=false]
DEBUG main org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator - No actions specified; doing nothing
DEBUG main org.hibernate.jpa.internal.EntityManagerFactoryRegistry - Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@36328d33
DEBUG main org.hibernate.jpa.internal.EntityManagerFactoryRegistry - Registering EntityManagerFactory: ContabilitatePU 
DEBUG main org.hibernate.jpa.spi.AbstractEntityManagerImpl - Trying to set a property which is not supported on entity manager level
DEBUG main org.hibernate.engine.transaction.spi.AbstractTransactionImpl - begin
DEBUG main org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Obtaining JDBC connection
DEBUG main org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Obtained JDBC connection
DEBUG main org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - initial autocommit status: false
DEBUG main org.hibernate.engine.transaction.spi.AbstractTransactionImpl - committing
DEBUG main org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - committed JDBC Connection
DEBUG main org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Releasing JDBC connection
DEBUG main org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Released JDBC connection
DEBUG pool-1-thread-1 org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl - Connection pool now considered primed; min-size will be maintained
